{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAgBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACTC,KAAKC,SAAW,GAAMJ,EAAQ,C,SAAEH,E,MAAUC,IAAWG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAC/EA,EAAM,G,CAnBbO,SAASC,cAAc,SAASC,iBAAiB,UAAU,SAASC,GAClEA,EAAMC,iBACN,MAAMC,EAAQC,SAASC,KAAKd,MAAMe,MAAO,IACnCC,EAAOH,SAASC,KAAKE,KAAKD,MAAO,IACjCE,EAASJ,SAASC,KAAKG,OAAOF,MAAO,IAC3C,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,IAC3BpB,EAAcoB,EAAGN,EAAQI,GAAQE,EAAI,IAClCC,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBoB,EAAAxB,GAASyB,OAAOC,QAAQ,uBAAqBvB,QAAiBC,MAAU,IAEzEuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBoB,EAAAxB,GAASyB,OAAOG,QAAQ,sBAAoBzB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\ndocument.querySelector('.form').addEventListener('submit', function(event) {\n  event.preventDefault();\n  const delay = parseInt(this.delay.value, 10);\n  const step = parseInt(this.step.value, 10);\n  const amount = parseInt(this.amount.value, 10);\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay + step * (i - 1))\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      Math.random() > 0.3 ? resolve({ position, delay }) : reject({ position, delay });\n    }, delay);\n  });\n}\n"],"names":["$1GAPJ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","delay1","parseInt","this","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.9d7b6bc0.js.map"}